{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\Asus\\\\Documents\\\\pharmacy project\\\\ePharmacy-frontend\\\\src\\\\components\\\\Pharmacyedit.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport Pharmacyaccountedit from './Pharmacyaccountedit';\nimport axios from \"axios\";\nexport default function Pharmacyedit() {\n  _s();\n\n  const [pharmacyList, setpharmacyList] = useState([]);\n  const [recordForEdit, setRecordForEdit] = useState(null);\n  useEffect(() => {\n    refreshpharmacyList();\n    setRecordForEdit(pharmacyList);\n    console.log(recordForEdit);\n  }, []);\n\n  const pharmacyAPI = (url = 'https://localhost:44357/api/Pharmacies/') => {\n    return {\n      fetchbyid: () => axios.get('https://localhost:44357/api/Pharmacies?field=Byid&value=2'),\n      create: newRecord => axios.post(url, newRecord),\n      update: (id, updatedRecord) => axios.put(url + id, updatedRecord),\n      delete: id => axios.delete(url + id)\n    };\n  };\n\n  function refreshpharmacyList() {\n    pharmacyAPI().fetchbyid().then(res => {\n      console.log(res);\n      setpharmacyList(res.data);\n    }).catch(err => console.log(err));\n  }\n\n  const addOrEdit = (formData, onSuccess) => {\n    pharmacyAPI().update(formData.get('Id'), formData).then(res => {\n      onSuccess();\n      refreshpharmacyList();\n    }).catch(err => console.log(err));\n  };\n\n  const showRecordDetails = data => {\n    setRecordForEdit(data); //console.log(recordForEdit)\n  };\n\n  const onDelete = (e, id) => {\n    if (window.confirm('Are you sure to deactivate this Account?')) pharmacyAPI().delete(id).then(res => refreshpharmacyList()).catch(err => console.log(err));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Pharmacyaccountedit, {\n      recordForEdit: recordForEdit,\n      addOrEdit: addOrEdit\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 17\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 13\n  }, this);\n}\n\n_s(Pharmacyedit, \"RFe31DprBqUB0U5hEJXsqIgqL8w=\");\n\n_c = Pharmacyedit;\n\nvar _c;\n\n$RefreshReg$(_c, \"Pharmacyedit\");","map":{"version":3,"sources":["C:/Users/Asus/Documents/pharmacy project/ePharmacy-frontend/src/components/Pharmacyedit.js"],"names":["React","useState","useEffect","Pharmacyaccountedit","axios","Pharmacyedit","pharmacyList","setpharmacyList","recordForEdit","setRecordForEdit","refreshpharmacyList","console","log","pharmacyAPI","url","fetchbyid","get","create","newRecord","post","update","id","updatedRecord","put","delete","then","res","data","catch","err","addOrEdit","formData","onSuccess","showRecordDetails","onDelete","e","window","confirm"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,mBAAP,MAAgC,uBAAhC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,eAAe,SAAUC,YAAV,GAAyB;AAAA;;AAEpC,QAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCN,QAAQ,CAAC,EAAD,CAAhD;AACA,QAAM,CAACO,aAAD,EAAgBC,gBAAhB,IAAoCR,QAAQ,CAAC,IAAD,CAAlD;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACZQ,IAAAA,mBAAmB;AACnBD,IAAAA,gBAAgB,CAACH,YAAD,CAAhB;AACAK,IAAAA,OAAO,CAACC,GAAR,CAAYJ,aAAZ;AAEH,GALQ,EAKN,EALM,CAAT;;AAOA,QAAMK,WAAW,GAAG,CAACC,GAAG,GAAG,yCAAP,KAAqD;AACrE,WAAO;AACHC,MAAAA,SAAS,EAAE,MAAMX,KAAK,CAACY,GAAN,CAAU,2DAAV,CADd;AAEHC,MAAAA,MAAM,EAAEC,SAAS,IAAId,KAAK,CAACe,IAAN,CAAWL,GAAX,EAAgBI,SAAhB,CAFlB;AAGHE,MAAAA,MAAM,EAAE,CAACC,EAAD,EAAKC,aAAL,KAAuBlB,KAAK,CAACmB,GAAN,CAAUT,GAAG,GAAGO,EAAhB,EAAoBC,aAApB,CAH5B;AAIHE,MAAAA,MAAM,EAAEH,EAAE,IAAIjB,KAAK,CAACoB,MAAN,CAAaV,GAAG,GAAGO,EAAnB;AAJX,KAAP;AAMH,GAPD;;AASA,WAASX,mBAAT,GAA+B;AAC3BG,IAAAA,WAAW,GAAGE,SAAd,GACKU,IADL,CACUC,GAAG,IAAI;AACTf,MAAAA,OAAO,CAACC,GAAR,CAAYc,GAAZ;AACAnB,MAAAA,eAAe,CAACmB,GAAG,CAACC,IAAL,CAAf;AACH,KAJL,EAKKC,KALL,CAKWC,GAAG,IAAIlB,OAAO,CAACC,GAAR,CAAYiB,GAAZ,CALlB;AAMH;;AAED,QAAMC,SAAS,GAAG,CAACC,QAAD,EAAWC,SAAX,KAAyB;AACvCnB,IAAAA,WAAW,GAAGO,MAAd,CAAqBW,QAAQ,CAACf,GAAT,CAAa,IAAb,CAArB,EAAyCe,QAAzC,EACCN,IADD,CACMC,GAAG,IAAI;AACTM,MAAAA,SAAS;AACTtB,MAAAA,mBAAmB;AACtB,KAJD,EAKCkB,KALD,CAKOC,GAAG,IAAIlB,OAAO,CAACC,GAAR,CAAYiB,GAAZ,CALd;AAMH,GAPD;;AASA,QAAMI,iBAAiB,GAAGN,IAAI,IAAI;AAC9BlB,IAAAA,gBAAgB,CAACkB,IAAD,CAAhB,CAD8B,CAE9B;AACH,GAHD;;AAKA,QAAMO,QAAQ,GAAG,CAACC,CAAD,EAAId,EAAJ,KAAW;AACxB,QAAIe,MAAM,CAACC,OAAP,CAAe,0CAAf,CAAJ,EACAxB,WAAW,GAAGW,MAAd,CAAqBH,EAArB,EACSI,IADT,CACcC,GAAG,IAAIhB,mBAAmB,EADxC,EAESkB,KAFT,CAEeC,GAAG,IAAIlB,OAAO,CAACC,GAAR,CAAYiB,GAAZ,CAFtB;AAGH,GALD;;AAOA,sBAGQ;AAAA,2BACI,QAAC,mBAAD;AAAqB,MAAA,aAAa,EAAErB,aAApC;AAAmD,MAAA,SAAS,EAAEsB;AAA9D;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UAHR;AASH;;GA5DwBzB,Y;;KAAAA,Y","sourcesContent":["import React, { useState, useEffect } from 'react'\r\nimport Pharmacyaccountedit from './Pharmacyaccountedit'\r\nimport axios from \"axios\";\r\n\r\nexport default function  Pharmacyedit() {\r\n\r\n    const [pharmacyList, setpharmacyList] = useState([])\r\n    const [recordForEdit, setRecordForEdit] = useState(null)\r\n\r\n    useEffect(() => {\r\n        refreshpharmacyList();\r\n        setRecordForEdit(pharmacyList);\r\n        console.log(recordForEdit);\r\n        \r\n    }, [])\r\n\r\n    const pharmacyAPI = (url = 'https://localhost:44357/api/Pharmacies/') => {\r\n        return {\r\n            fetchbyid: () => axios.get('https://localhost:44357/api/Pharmacies?field=Byid&value=2'),\r\n            create: newRecord => axios.post(url, newRecord),\r\n            update: (id, updatedRecord) => axios.put(url + id, updatedRecord),\r\n            delete: id => axios.delete(url + id)\r\n        }\r\n    }\r\n\r\n    function refreshpharmacyList() {\r\n        pharmacyAPI().fetchbyid()\r\n            .then(res => {\r\n                console.log(res)\r\n                setpharmacyList(res.data)\r\n            })\r\n            .catch(err => console.log(err))\r\n    }\r\n\r\n    const addOrEdit = (formData, onSuccess) => {\r\n        pharmacyAPI().update(formData.get('Id'), formData)\r\n        .then(res => {\r\n            onSuccess();\r\n            refreshpharmacyList();\r\n        })\r\n        .catch(err => console.log(err))\r\n    }\r\n\r\n    const showRecordDetails = data => {\r\n        setRecordForEdit(data)\r\n        //console.log(recordForEdit)\r\n    }\r\n\r\n    const onDelete = (e, id) => {\r\n        if (window.confirm('Are you sure to deactivate this Account?'))\r\n        pharmacyAPI().delete(id)\r\n                .then(res => refreshpharmacyList())\r\n                .catch(err => console.log(err))\r\n    }\r\n\r\n    return (\r\n        \r\n           \r\n            <div>\r\n                <Pharmacyaccountedit recordForEdit={recordForEdit} addOrEdit={addOrEdit}/>\r\n             </div>\r\n            \r\n            \r\n    )\r\n}"]},"metadata":{},"sourceType":"module"}