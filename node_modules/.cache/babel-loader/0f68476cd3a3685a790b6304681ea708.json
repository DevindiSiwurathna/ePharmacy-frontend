{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"K:\\\\6th Semester\\\\Software Project\\\\New folder\\\\Pharmacy-Project-Frontend-master\\\\src\\\\context.js\";\nimport React, { Component } from \"react\";\nimport { storeProducts, detailProduct } from \"./components/services/Data/dataFirstaid\";\nconst ProductContext = /*#__PURE__*/React.createContext();\n\nclass ProductProvider extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      products: [],\n      detailProduct: detailProduct,\n      cart: [],\n      modalOpen: false,\n      modalProduct: detailProduct,\n      cartSubTotal: 0,\n      cartTax: 0,\n      cartTotal: 0\n    };\n\n    this.setProducts = () => {\n      let products = [];\n      storeProducts.forEach(item => {\n        const singleItem = { ...item\n        };\n        products = [...products, singleItem];\n      });\n      this.setState(() => {\n        return {\n          products\n        };\n      }, this.checkCartItems);\n    };\n\n    this.getItem = id => {\n      const product = this.state.products.find(item => item.id === id);\n      return product;\n    };\n\n    this.handleDetail = id => {\n      const product = this.getItem(id);\n      this.setState(() => {\n        return {\n          detailProduct: product\n        };\n      });\n    };\n\n    this.addToCart = id => {\n      let tempProducts = [...this.state.products];\n      const index = tempProducts.indexOf(this.getItem(id));\n      const product = tempProducts[index];\n      product.inCart = true;\n      product.count = 1;\n      const price = product.price;\n      product.total = price;\n      this.setState(() => {\n        return {\n          products: [...tempProducts],\n          cart: [...this.state.cart, product],\n          detailProduct: { ...product\n          }\n        };\n      }, this.addTotals);\n    };\n\n    this.openModal = id => {\n      const product = this.getItem(id);\n      this.setState(() => {\n        return {\n          modalProduct: product,\n          modalOpen: true\n        };\n      });\n    };\n\n    this.closeModal = () => {\n      this.setState(() => {\n        return {\n          modalOpen: false\n        };\n      });\n    };\n\n    this.increment = id => {\n      let tempCart = [...this.state.cart];\n      const selectedProduct = tempCart.find(item => {\n        return item.id === id;\n      });\n      const index = tempCart.indexOf(selectedProduct);\n      const product = tempCart[index];\n      product.count = product.count + 1;\n      product.total = product.count * product.price;\n      this.setState(() => {\n        return {\n          cart: [...tempCart]\n        };\n      }, this.addTotals);\n    };\n\n    this.decrement = id => {\n      let tempCart = [...this.state.cart];\n      const selectedProduct = tempCart.find(item => {\n        return item.id === id;\n      });\n      const index = tempCart.indexOf(selectedProduct);\n      const product = tempCart[index];\n      product.count = product.count - 1;\n\n      if (product.count === 0) {\n        this.removeItem(id);\n      } else {\n        product.total = product.count * product.price;\n        this.setState(() => {\n          return {\n            cart: [...tempCart]\n          };\n        }, this.addTotals);\n      }\n    };\n\n    this.getTotals = () => {\n      // const subTotal = this.state.cart\n      //   .map(item => item.total)\n      //   .reduce((acc, curr) => {\n      //     acc = acc + curr;\n      //     return acc;\n      //   }, 0);\n      let subTotal = 0;\n      this.state.cart.map(item => subTotal += item.total);\n      const tempTax = subTotal * 0.1;\n      const tax = parseFloat(tempTax.toFixed(2));\n      const total = subTotal + tax;\n      return {\n        subTotal,\n        tax,\n        total\n      };\n    };\n\n    this.addTotals = () => {\n      const totals = this.getTotals();\n      this.setState(() => {\n        return {\n          cartSubTotal: totals.subTotal,\n          cartTax: totals.tax,\n          cartTotal: totals.total\n        };\n      }, () => {// console.log(this.state);\n      });\n    };\n\n    this.removeItem = id => {\n      let tempProducts = [...this.state.products];\n      let tempCart = [...this.state.cart];\n      const index = tempProducts.indexOf(this.getItem(id));\n      let removedProduct = tempProducts[index];\n      removedProduct.inCart = false;\n      removedProduct.count = 0;\n      removedProduct.total = 0;\n      tempCart = tempCart.filter(item => {\n        return item.id !== id;\n      });\n      this.setState(() => {\n        return {\n          cart: [...tempCart],\n          products: [...tempProducts]\n        };\n      }, this.addTotals);\n    };\n\n    this.clearCart = () => {\n      this.setState(() => {\n        return {\n          cart: []\n        };\n      }, () => {\n        this.setProducts();\n        this.addTotals();\n      });\n    };\n  }\n\n  componentDidMount() {\n    this.setProducts();\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(ProductContext.Provider, {\n      value: { ...this.state,\n        handleDetail: this.handleDetail,\n        addToCart: this.addToCart,\n        openModal: this.openModal,\n        closeModal: this.closeModal,\n        increment: this.increment,\n        decrement: this.decrement,\n        removeItem: this.removeItem,\n        clearCart: this.clearCart\n      },\n      children: this.props.children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nconst ProductConsumer = ProductContext.Consumer;\nexport { ProductProvider, ProductConsumer };","map":{"version":3,"sources":["K:/6th Semester/Software Project/New folder/Pharmacy-Project-Frontend-master/src/context.js"],"names":["React","Component","storeProducts","detailProduct","ProductContext","createContext","ProductProvider","state","products","cart","modalOpen","modalProduct","cartSubTotal","cartTax","cartTotal","setProducts","forEach","item","singleItem","setState","checkCartItems","getItem","id","product","find","handleDetail","addToCart","tempProducts","index","indexOf","inCart","count","price","total","addTotals","openModal","closeModal","increment","tempCart","selectedProduct","decrement","removeItem","getTotals","subTotal","map","tempTax","tax","parseFloat","toFixed","totals","removedProduct","filter","clearCart","componentDidMount","render","props","children","ProductConsumer","Consumer"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport { storeProducts, detailProduct } from \"./components/services/Data/dataFirstaid\";\r\nconst ProductContext = React.createContext();\r\n\r\nclass ProductProvider extends Component {\r\n  state = {\r\n    products: [],\r\n    detailProduct: detailProduct,\r\n    cart: [],\r\n    modalOpen: false,\r\n    modalProduct: detailProduct,\r\n    cartSubTotal: 0,\r\n    cartTax: 0,\r\n    cartTotal: 0\r\n  };\r\n  componentDidMount() {\r\n    this.setProducts();\r\n  }\r\n\r\n  setProducts = () => {\r\n    let products = [];\r\n    storeProducts.forEach(item => {\r\n      const singleItem = { ...item };\r\n      products = [...products, singleItem];\r\n    });\r\n    this.setState(() => {\r\n      return { products };\r\n    }, this.checkCartItems);\r\n  };\r\n\r\n  getItem = id => {\r\n    const product = this.state.products.find(item => item.id === id);\r\n    return product;\r\n  };\r\n  handleDetail = id => {\r\n    const product = this.getItem(id);\r\n    this.setState(() => {\r\n      return { detailProduct: product };\r\n    });\r\n  };\r\n  addToCart = id => {\r\n    let tempProducts = [...this.state.products];\r\n    const index = tempProducts.indexOf(this.getItem(id));\r\n    const product = tempProducts[index];\r\n    product.inCart = true;\r\n    product.count = 1;\r\n    const price = product.price;\r\n    product.total = price;\r\n\r\n    this.setState(() => {\r\n      return {\r\n        products: [...tempProducts],\r\n        cart: [...this.state.cart, product],\r\n        detailProduct: { ...product }\r\n      };\r\n    }, this.addTotals);\r\n  };\r\n  openModal = id => {\r\n    const product = this.getItem(id);\r\n    this.setState(() => {\r\n      return { modalProduct: product, modalOpen: true };\r\n    });\r\n  };\r\n  closeModal = () => {\r\n    this.setState(() => {\r\n      return { modalOpen: false };\r\n    });\r\n  };\r\n  increment = id => {\r\n    let tempCart = [...this.state.cart];\r\n    const selectedProduct = tempCart.find(item => {\r\n      return item.id === id;\r\n    });\r\n    const index = tempCart.indexOf(selectedProduct);\r\n    const product = tempCart[index];\r\n    product.count = product.count + 1;\r\n    product.total = product.count * product.price;\r\n    this.setState(() => {\r\n      return {\r\n        cart: [...tempCart]\r\n      };\r\n    }, this.addTotals);\r\n  };\r\n  decrement = id => {\r\n    let tempCart = [...this.state.cart];\r\n    const selectedProduct = tempCart.find(item => {\r\n      return item.id === id;\r\n    });\r\n    const index = tempCart.indexOf(selectedProduct);\r\n    const product = tempCart[index];\r\n    product.count = product.count - 1;\r\n    if (product.count === 0) {\r\n      this.removeItem(id);\r\n    } else {\r\n      product.total = product.count * product.price;\r\n      this.setState(() => {\r\n        return { cart: [...tempCart] };\r\n      }, this.addTotals);\r\n    }\r\n  };\r\n  getTotals = () => {\r\n    // const subTotal = this.state.cart\r\n    //   .map(item => item.total)\r\n    //   .reduce((acc, curr) => {\r\n    //     acc = acc + curr;\r\n    //     return acc;\r\n    //   }, 0);\r\n    let subTotal = 0;\r\n    this.state.cart.map(item => (subTotal += item.total));\r\n    const tempTax = subTotal * 0.1;\r\n    const tax = parseFloat(tempTax.toFixed(2));\r\n    const total = subTotal + tax;\r\n    return {\r\n      subTotal,\r\n      tax,\r\n      total\r\n    };\r\n  };\r\n  addTotals = () => {\r\n    const totals = this.getTotals();\r\n    this.setState(\r\n      () => {\r\n        return {\r\n          cartSubTotal: totals.subTotal,\r\n          cartTax: totals.tax,\r\n          cartTotal: totals.total\r\n        };\r\n      },\r\n      () => {\r\n        // console.log(this.state);\r\n      }\r\n    );\r\n  };\r\n  removeItem = id => {\r\n    let tempProducts = [...this.state.products];\r\n    let tempCart = [...this.state.cart];\r\n\r\n    const index = tempProducts.indexOf(this.getItem(id));\r\n    let removedProduct = tempProducts[index];\r\n    removedProduct.inCart = false;\r\n    removedProduct.count = 0;\r\n    removedProduct.total = 0;\r\n\r\n    tempCart = tempCart.filter(item => {\r\n      return item.id !== id;\r\n    });\r\n\r\n    this.setState(() => {\r\n      return {\r\n        cart: [...tempCart],\r\n        products: [...tempProducts]\r\n      };\r\n    }, this.addTotals);\r\n  };\r\n  clearCart = () => {\r\n    this.setState(\r\n      () => {\r\n        return { cart: [] };\r\n      },\r\n      () => {\r\n        this.setProducts();\r\n        this.addTotals();\r\n      }\r\n    );\r\n  };\r\n  render() {\r\n    return (\r\n      <ProductContext.Provider\r\n        value={{\r\n          ...this.state,\r\n          handleDetail: this.handleDetail,\r\n          addToCart: this.addToCart,\r\n          openModal: this.openModal,\r\n          closeModal: this.closeModal,\r\n          increment: this.increment,\r\n          decrement: this.decrement,\r\n          removeItem: this.removeItem,\r\n          clearCart: this.clearCart\r\n        }}\r\n      >\r\n        {this.props.children}\r\n      </ProductContext.Provider>\r\n    );\r\n  }\r\n}\r\n\r\nconst ProductConsumer = ProductContext.Consumer;\r\n\r\nexport { ProductProvider, ProductConsumer };\r\n"]},"metadata":{},"sourceType":"module"}