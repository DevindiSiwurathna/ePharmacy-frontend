{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\ACER\\\\Desktop\\\\newnew software\\\\tempa's\\\\ePharmacy-frontend\\\\src\\\\components\\\\up\\\\uplist.js\";\nimport React from 'react';\nimport Up from './up';\nimport axios from \"axios\";\nimport { Link, withRouter, useParams } from \"react-router-dom\"; //import { useLocation, useParams } from 'react-router-dom';\n\nexport default function Uplist({\n  custid\n}) {\n  let url = new URL();\n  let myphmcy = new URLSearchParams(); //var phmcy = (new URLSearchParams(window.location.search)).getAll('phmcy')\n  //var filtered = phmcy.filter(Boolean);\n  //console.log(filtered);\n  //const {myphmcy} = useParams();\n  //console.log(phmcy);\n  // var myphmcy = JSON.stringify(phmcy);\n  //const phmcyvalue = new URLSearchParams(this.props.location.search);\n  //const phmcy = phmcyvalue.get('phmcy')\n\n  console.log(myphmcy); //const custid = this.props.custid;\n\n  console.log({\n    custid\n  }); //console.log(props.match.params);\n\n  const ordersAPI = (url = 'https://localhost:44357/api/Orders') => {\n    return {\n      fetchAll: () => axios.get(url),\n      create: newRecord => axios.post(url, newRecord),\n      update: (id, updateRecord) => axios.put(url + id, updateRecord),\n      delete: id => axios.delete(url + id)\n    };\n  };\n\n  const addOrEdit = (formData, onSuccess) => {\n    ordersAPI().create(formData).then(res => {\n      onSuccess();\n    }).catch(err => console.log(err.response.data));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"row\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"jumbotron jumbotron-fluid py-4 \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container text\",\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"display-4\",\n        children: \" Order Register\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"col-md-4 offset-3\",\n      children: /*#__PURE__*/_jsxDEV(Up, {\n        addOrEdit: addOrEdit,\n        myphmcy: myphmcy,\n        custid: custid\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"col-md-1\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \" \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 9\n  }, this);\n}\n_c = Uplist;\n\nvar _c;\n\n$RefreshReg$(_c, \"Uplist\");","map":{"version":3,"sources":["C:/Users/ACER/Desktop/newnew software/tempa's/ePharmacy-frontend/src/components/up/uplist.js"],"names":["React","Up","axios","Link","withRouter","useParams","Uplist","custid","url","URL","myphmcy","URLSearchParams","console","log","ordersAPI","fetchAll","get","create","newRecord","post","update","id","updateRecord","put","delete","addOrEdit","formData","onSuccess","then","res","catch","err","response","data"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,EAAP,MAAe,MAAf;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,IAAT,EAAeC,UAAf,EAA0BC,SAA1B,QAA2C,kBAA3C,C,CACA;;AAEA,eAAe,SAASC,MAAT,CAAgB;AAACC,EAAAA;AAAD,CAAhB,EAA0B;AAGrC,MAAIC,GAAG,GAAG,IAAIC,GAAJ,EAAV;AACA,MAAIC,OAAO,GAAI,IAAIC,eAAJ,EAAf,CAJqC,CAKrC;AAEA;AAEE;AAEF;AACA;AACD;AACC;AACA;;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAYH,OAAZ,EAhBqC,CAkBrC;;AACAE,EAAAA,OAAO,CAACC,GAAR,CAAY;AAACN,IAAAA;AAAD,GAAZ,EAnBqC,CAsBrC;;AAEA,QAAMO,SAAS,GAAE,CAACN,GAAG,GAAC,oCAAL,KAA8C;AAC3D,WAAO;AACHO,MAAAA,QAAQ,EAAE,MAAMb,KAAK,CAACc,GAAN,CAAUR,GAAV,CADb;AAEHS,MAAAA,MAAM,EAAEC,SAAS,IAAIhB,KAAK,CAACiB,IAAN,CAAWX,GAAX,EAAgBU,SAAhB,CAFlB;AAGHE,MAAAA,MAAM,EAAE,CAACC,EAAD,EAAKC,YAAL,KAAsBpB,KAAK,CAACqB,GAAN,CAAUf,GAAG,GAAGa,EAAhB,EAAoBC,YAApB,CAH3B;AAIHE,MAAAA,MAAM,EAAEH,EAAE,IAAInB,KAAK,CAACsB,MAAN,CAAahB,GAAG,GAACa,EAAjB;AAJX,KAAP;AAMH,GAPD;;AASA,QAAMI,SAAS,GAAG,CAACC,QAAD,EAAWC,SAAX,KAAyB;AAEvCb,IAAAA,SAAS,GAAGG,MAAZ,CAAmBS,QAAnB,EACCE,IADD,CACMC,GAAG,IAAI;AACTF,MAAAA,SAAS;AACZ,KAHD,EAICG,KAJD,CAIOC,GAAG,IAAInB,OAAO,CAACC,GAAR,CAAYkB,GAAG,CAACC,QAAJ,CAAaC,IAAzB,CAJd;AAKH,GAPD;;AASA,sBACI;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,4BACI;AAAK,MAAA,SAAS,EAAC;AAAf;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAK,MAAA,SAAS,EAAC,gBAAf;AAAA,6BACI;AAAI,QAAA,SAAS,EAAC,WAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YAFJ,eAMI;AAAK,MAAA,SAAS,EAAC,mBAAf;AAAA,6BACI,QAAC,EAAD;AACI,QAAA,SAAS,EAAIR,SADjB;AAEI,QAAA,OAAO,EAAIf,OAFf;AAGI,QAAA,MAAM,EAAIH;AAHd;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YANJ,eAaQ;AAAK,MAAA,SAAS,EAAC,UAAf;AAAA,6BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YAbR;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAoBH;KA9DuBD,M","sourcesContent":["import React from 'react'\r\nimport Up from './up'\r\nimport axios from \"axios\";\r\nimport { Link, withRouter,useParams } from \"react-router-dom\";\r\n//import { useLocation, useParams } from 'react-router-dom';\r\n\r\nexport default function Uplist({custid}) {\r\n\r\n    \r\n    let url = new URL()\r\n    let myphmcy = (new URLSearchParams());\r\n    //var phmcy = (new URLSearchParams(window.location.search)).getAll('phmcy')\r\n\r\n    //var filtered = phmcy.filter(Boolean);\r\n      \r\n      //console.log(filtered);\r\n    \r\n    //const {myphmcy} = useParams();\r\n    //console.log(phmcy);\r\n   // var myphmcy = JSON.stringify(phmcy);\r\n    //const phmcyvalue = new URLSearchParams(this.props.location.search);\r\n    //const phmcy = phmcyvalue.get('phmcy')\r\n    console.log(myphmcy);\r\n\r\n    //const custid = this.props.custid;\r\n    console.log({custid});\r\n\r\n    \r\n    //console.log(props.match.params);\r\n\r\n    const ordersAPI= (url='https://localhost:44357/api/Orders') => {\r\n        return {\r\n            fetchAll: () => axios.get(url),\r\n            create: newRecord => axios.post(url, newRecord),\r\n            update: (id, updateRecord) => axios.put(url + id, updateRecord),\r\n            delete: id => axios.delete(url+id)\r\n        }\r\n    }\r\n \r\n    const addOrEdit = (formData, onSuccess) => {\r\n\r\n        ordersAPI().create(formData)\r\n        .then(res => {\r\n            onSuccess();\r\n        })\r\n        .catch(err => console.log(err.response.data))\r\n    }\r\n\r\n    return (\r\n        <div className=\"row\">\r\n            <div className=\"jumbotron jumbotron-fluid py-4 \"></div>\r\n            <div className=\"container text\">\r\n                <h1 className=\"display-4\"> Order Register</h1>\r\n               \r\n            </div>\r\n            <div className=\"col-md-4 offset-3\">\r\n                <Up\r\n                    addOrEdit = {addOrEdit}\r\n                    myphmcy = {myphmcy}\r\n                    custid = {custid}\r\n                />\r\n                </div> \r\n                <div className=\"col-md-1\">\r\n                    <div> </div>\r\n                </div>\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\n"]},"metadata":{},"sourceType":"module"}